[2019-03-16 23:00:25,238] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-16 23:00:25,238] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(test4-1 -> Vector(2, 3, 1), test1-0 -> Vector(2), test2-2 -> Vector(2)), 1 -> Map(test2-1 -> Vector(1), test4-0 -> Vector(1, 2, 3)), 3 -> Map(test3-0 -> Vector(3, 2, 1), test4-2 -> Vector(3, 1, 2), test2-0 -> Vector(3))) (kafka.controller.KafkaController)
[2019-03-16 23:00:25,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-03-16 23:00:25,238] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:00:25,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-03-16 23:00:25,238] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:00:25,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-03-16 23:00:25,238] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:05:25,239] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-16 23:05:25,239] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(test4-1 -> Vector(2, 3, 1), test1-0 -> Vector(2), test2-2 -> Vector(2)), 1 -> Map(test2-1 -> Vector(1), test4-0 -> Vector(1, 2, 3)), 3 -> Map(test3-0 -> Vector(3, 2, 1), test4-2 -> Vector(3, 1, 2), test2-0 -> Vector(3))) (kafka.controller.KafkaController)
[2019-03-16 23:05:25,239] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-03-16 23:05:25,239] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:05:25,239] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-03-16 23:05:25,240] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:05:25,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-03-16 23:05:25,240] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:10:25,240] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-16 23:10:25,240] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(test4-1 -> Vector(2, 3, 1), test1-0 -> Vector(2), test2-2 -> Vector(2)), 1 -> Map(test2-1 -> Vector(1), test4-0 -> Vector(1, 2, 3)), 3 -> Map(test3-0 -> Vector(3, 2, 1), test4-2 -> Vector(3, 1, 2), test2-0 -> Vector(3))) (kafka.controller.KafkaController)
[2019-03-16 23:10:25,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-03-16 23:10:25,240] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:10:25,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-03-16 23:10:25,240] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:10:25,240] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-03-16 23:10:25,240] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:15:25,241] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-16 23:15:25,243] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(test4-1 -> Vector(2, 3, 1), test1-0 -> Vector(2), test2-2 -> Vector(2)), 1 -> Map(test2-1 -> Vector(1), test4-0 -> Vector(1, 2, 3)), 3 -> Map(test3-0 -> Vector(3, 2, 1), test4-2 -> Vector(3, 1, 2), test2-0 -> Vector(3))) (kafka.controller.KafkaController)
[2019-03-16 23:15:25,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-03-16 23:15:25,243] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:15:25,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-03-16 23:15:25,243] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:15:25,243] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-03-16 23:15:25,243] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:20:25,244] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-16 23:20:25,245] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(test4-1 -> Vector(2, 3, 1), test1-0 -> Vector(2), test2-2 -> Vector(2)), 1 -> Map(test2-1 -> Vector(1), test4-0 -> Vector(1, 2, 3)), 3 -> Map(test3-0 -> Vector(3, 2, 1), test4-2 -> Vector(3, 1, 2), test2-0 -> Vector(3))) (kafka.controller.KafkaController)
[2019-03-16 23:20:25,246] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-03-16 23:20:25,246] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:20:25,246] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-03-16 23:20:25,246] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:20:25,246] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-03-16 23:20:25,246] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:25:25,247] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-03-16 23:25:25,247] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(test4-1 -> Vector(2, 3, 1), test1-0 -> Vector(2), test2-2 -> Vector(2)), 1 -> Map(test2-1 -> Vector(1), test4-0 -> Vector(1, 2, 3)), 3 -> Map(test3-0 -> Vector(3, 2, 1), test4-2 -> Vector(3, 1, 2), test2-0 -> Vector(3))) (kafka.controller.KafkaController)
[2019-03-16 23:25:25,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-03-16 23:25:25,247] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:25:25,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-03-16 23:25:25,247] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:25:25,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-03-16 23:25:25,247] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-03-16 23:27:58,981] INFO [Controller id=1] Newly added brokers: , deleted brokers: 3, all live brokers: 1,2 (kafka.controller.KafkaController)
[2019-03-16 23:27:59,033] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-03-16 23:27:59,034] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-03-16 23:27:59,035] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-03-16 23:27:59,041] INFO [Controller id=1] Broker failure callback for 3 (kafka.controller.KafkaController)
[2019-03-16 23:27:59,127] INFO [RequestSendThread controllerId=1] Controller 1 connected to bdata1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-03-16 23:27:59,129] INFO [RequestSendThread controllerId=1] Controller 1 connected to bdata2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-03-16 23:27:59,237] DEBUG The stop replica request (delete = true) sent to broker 3 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-16 23:27:59,237] DEBUG The stop replica request (delete = false) sent to broker 3 is [Topic=test2,Partition=0,Replica=3],[Topic=test4,Partition=0,Replica=3],[Topic=test3,Partition=0,Replica=3],[Topic=test4,Partition=1,Replica=3],[Topic=test4,Partition=2,Replica=3] (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-16 23:27:59,254] WARN [Channel manager on controller 1]: Not sending request (type=StopReplicaRequest, controllerId=1, controllerEpoch=3, deletePartitions=false, partitions=) to broker 3, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-03-16 23:27:59,255] WARN [Channel manager on controller 1]: Not sending request (type=StopReplicaRequest, controllerId=1, controllerEpoch=3, deletePartitions=false, partitions=test2-0) to broker 3, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-03-16 23:27:59,256] WARN [Channel manager on controller 1]: Not sending request (type=StopReplicaRequest, controllerId=1, controllerEpoch=3, deletePartitions=false, partitions=test4-0) to broker 3, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-03-16 23:27:59,256] WARN [Channel manager on controller 1]: Not sending request (type=StopReplicaRequest, controllerId=1, controllerEpoch=3, deletePartitions=false, partitions=test3-0) to broker 3, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-03-16 23:27:59,256] WARN [Channel manager on controller 1]: Not sending request (type=StopReplicaRequest, controllerId=1, controllerEpoch=3, deletePartitions=false, partitions=test4-1) to broker 3, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-03-16 23:27:59,256] WARN [Channel manager on controller 1]: Not sending request (type=StopReplicaRequest, controllerId=1, controllerEpoch=3, deletePartitions=false, partitions=test4-2) to broker 3, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-03-16 23:27:59,256] DEBUG [Controller id=1] Unregister BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2019-03-16 23:29:38,010] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2019-03-16 23:29:38,011] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2019-03-16 23:29:38,011] DEBUG [Controller id=1] Live brokers: 2 (kafka.controller.KafkaController)
[2019-03-16 23:29:38,051] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-16 23:29:38,051] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=test4,Partition=1,Replica=1],[Topic=test3,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-16 23:29:38,110] WARN [Channel manager on controller 1]: Not sending request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=3, partitionStates={test3-0=PartitionState(controllerEpoch=3, leader=2, leaderEpoch=2, isr=2, zkVersion=2, replicas=3,2,1, isNew=false), test4-1=PartitionState(controllerEpoch=3, leader=2, leaderEpoch=4, isr=2, zkVersion=5, replicas=2,3,1, isNew=false)}, liveLeaders=(bdata2:9092 (id: 2 rack: null))) to broker 3, since it is offline. (kafka.controller.ControllerChannelManager)
[2019-03-16 23:29:38,110] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-16 23:29:38,110] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=test3,Partition=0,Replica=1],[Topic=test4,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2019-03-16 23:29:38,111] TRACE [Controller id=1] All leaders = test2-2 -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:3),test1-0 -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:3),test4-0 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:3),test4-2 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:3),test2-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),test3-0 -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:3),test4-1 -> (Leader:2,ISR:2,LeaderEpoch:4,ControllerEpoch:3),test2-0 -> (Leader:-1,ISR:3,LeaderEpoch:1,ControllerEpoch:3) (kafka.controller.KafkaController)
[2019-03-16 23:29:39,132] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-03-16 23:29:39,132] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-03-16 23:29:39,133] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-03-16 23:29:39,133] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2019-03-16 23:29:39,133] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(2, 1) (kafka.controller.KafkaController)
[2019-03-16 23:29:39,134] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-03-16 23:29:39,136] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-03-16 23:29:39,136] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-03-16 23:29:39,136] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-03-16 23:29:39,136] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-03-16 23:29:39,138] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-03-16 23:29:39,138] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-03-16 23:29:39,138] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-03-16 23:29:39,139] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
